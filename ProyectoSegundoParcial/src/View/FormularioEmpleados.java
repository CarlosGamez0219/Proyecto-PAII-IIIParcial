/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */

package View;

import Controller.EmpleadosDAO;
import Model.Empleados;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlos
 */
public class FormularioEmpleados extends javax.swing.JDialog {
    
    private String mode;
    private int EmpleadoID;
    private EmpleadosDAO dao;
    private ListadoEmpleados parent;
    private String contraseñaOriginal;
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FormularioEmpleados.class.getName());

    /**
     * Creates new form FormularioEmpleados
     */
    public FormularioEmpleados(ListadoEmpleados pParent, boolean modal, String pMode, int pEmpleadoID) {
        super(pParent, modal);
        this.parent = pParent;
        initComponents();
        setLocationRelativeTo(null);
        combo_Status.removeAllItems();
        combo_Status.addItem("Activo");
        combo_Status.addItem("Inactivo");
        
        combo_Rol.removeAllItems();
        combo_Rol.addItem("Administrador");
        combo_Rol.addItem("Bibliotecario");
        combo_Rol.addItem("IT");

        
        dao = new EmpleadosDAO();
        this.mode = pMode;
        this.EmpleadoID = pEmpleadoID;
        txt_EmpleadoID.setText(String.valueOf(pEmpleadoID));
        if(mode.equals("INS")){
            btn_accion.setText("Insertar");
        }else if(mode.equals("UPD")){
            Empleados empleados = (Empleados) dao.getByEmpleadoID(EmpleadoID);
            txt_NombreEmpleado.setText(empleados.getNombreEmpleado());
            txt_Contraseña.setText("");
            contraseñaOriginal = empleados.getContraseña();
            combo_Rol.setSelectedItem(empleados.getRolID() == 1 ? "Administrador" : empleados.getRolID() == 2 ? "Bibliotecario" : empleados.getRolID() == 3 ? "IT" : "Desconocido");
            combo_Status.setSelectedItem(empleados.getStatus() == 1 ? "Activo" : "Inactivo");
            


            btn_accion.setText("Actualizar");
            
        }else if(mode.equals("DLT")){
            Empleados empleados = (Empleados) dao.getByEmpleadoID(EmpleadoID);
            txt_NombreEmpleado.setText(empleados.getNombreEmpleado());
            txt_NombreEmpleado.setEnabled(false);
            txt_Contraseña.setText(empleados.getContraseña());
            txt_Contraseña.setEnabled(false);
            combo_Rol.setSelectedItem(empleados.getRolID() == 1 ? "Administrador" : empleados.getRolID() == 2 ? "Bibliotecario" : empleados.getRolID() == 3 ? "IT" : "Desconocido");
            combo_Rol.setEnabled(false);
            combo_Status.setSelectedItem(empleados.getStatus() == 1 ? "Activo" : "Inactivo");
            combo_Status.setEnabled(false);
            btn_accion.setText("Eliminar");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_NombreEmpleado = new javax.swing.JTextField();
        txt_EmpleadoID = new javax.swing.JTextField();
        btn_accion = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        jLabel_Contraseña = new javax.swing.JLabel();
        txt_Contraseña = new javax.swing.JTextField();
        combo_Status = new javax.swing.JComboBox<>();
        combo_Rol = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Empleados");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Nombre del Empleado");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("EmpleadoID");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("RolID");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Status");

        txt_EmpleadoID.setEnabled(false);

        btn_accion.setBackground(new java.awt.Color(0, 153, 153));
        btn_accion.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_accion.setText("Guardar");
        btn_accion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_accionActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 51, 51));
        btn_salir.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        jLabel_Contraseña.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel_Contraseña.setText("Contraseña");

        combo_Status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_Status.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_StatusActionPerformed(evt);
            }
        });

        combo_Rol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_Rol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_RolActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel_Contraseña)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_accion))
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_EmpleadoID, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(txt_NombreEmpleado, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(txt_Contraseña)
                    .addComponent(btn_salir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(combo_Status, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(combo_Rol, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_EmpleadoID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_NombreEmpleado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_Contraseña)
                        .addGap(30, 30, 30))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txt_Contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(combo_Rol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combo_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_accion)
                    .addComponent(btn_salir))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_accionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_accionActionPerformed
        // TODO add your handling code here:
    if(mode.equals("INS")){
            Empleados empleados = new Empleados();
            empleados.setNombreEmpleado(txt_NombreEmpleado.getText());
            
            //Conversion de contraseña de texto plano a hash.
            String contraseñaPlano = txt_Contraseña.getText();
            String contraseñaHash = org.mindrot.jbcrypt.BCrypt.hashpw(contraseñaPlano, org.mindrot.jbcrypt.BCrypt.gensalt(12));
            empleados.setContraseña(contraseñaHash);

           try {
            String rolSeleccionado = (String) combo_Rol.getSelectedItem();
            empleados.setRolID(
                rolSeleccionado.equals("Administrador") ? 1 :
                rolSeleccionado.equals("Bibliotecario") ? 2 :
                rolSeleccionado.equals("IT") ? 3 : 0
            );

            if (empleados.getRolID() == 0) {
                JOptionPane.showMessageDialog(this, "Seleccione un rol válido.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al asignar el Rol.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
            
        try {
            String statusSeleccionado = (String) combo_Status.getSelectedItem();
            empleados.setStatus(statusSeleccionado.equals("Activo") ? 1 : 0);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El Status debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
            
            dao.insert(empleados);
            
            parent.refrescarInfo();
            
            this.dispose();
        }
        
if(mode.equals("UPD")){
    Empleados empleados = new Empleados();
    empleados.setNombreEmpleado(txt_NombreEmpleado.getText());
    empleados.setEmpleadoID(EmpleadoID);

    String contraseñaPlano = txt_Contraseña.getText();
    String contraseñaHash;
    if (contraseñaPlano == null || contraseñaPlano.isEmpty()) {
        contraseñaHash = contraseñaOriginal; // No se cambió
    } else {
        contraseñaHash = org.mindrot.jbcrypt.BCrypt.hashpw(contraseñaPlano, org.mindrot.jbcrypt.BCrypt.gensalt(12));
    }
    empleados.setContraseña(contraseñaHash);

    try {
        String rolSeleccionado = (String) combo_Rol.getSelectedItem();
        empleados.setRolID(
            rolSeleccionado.equals("Administrador") ? 1 :
            rolSeleccionado.equals("Bibliotecario") ? 2 :
            rolSeleccionado.equals("IT") ? 3 : 0
        );

        if (empleados.getRolID() == 0) {
            JOptionPane.showMessageDialog(this, "Seleccione un rol válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Ocurrió un error al asignar el Rol.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

            
        try {
            String statusSeleccionado = (String) combo_Status.getSelectedItem();
            empleados.setStatus(statusSeleccionado.equals("Activo") ? 1 : 0);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El Status debe ser un número válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
            dao.update(empleados);
            
            parent.refrescarInfo();
            
            this.dispose();
        }
        
        if(mode.equals("DLT")){
            dao.delete(EmpleadoID);
            
            parent.refrescarInfo();
            
            this.dispose();
        }
        
    }//GEN-LAST:event_btn_accionActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void combo_StatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_StatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_StatusActionPerformed

    private void combo_RolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_RolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_RolActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                FormularioEmpleados dialog = new FormularioEmpleados(new ListadoEmpleados(), true, "INS", 0);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_accion;
    private javax.swing.JButton btn_salir;
    private javax.swing.JComboBox<String> combo_Rol;
    private javax.swing.JComboBox<String> combo_Status;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel_Contraseña;
    private javax.swing.JTextField txt_Contraseña;
    private javax.swing.JTextField txt_EmpleadoID;
    private javax.swing.JTextField txt_NombreEmpleado;
    // End of variables declaration//GEN-END:variables
}
